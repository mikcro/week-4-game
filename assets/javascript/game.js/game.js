$(document).ready(function() {
// The number generated by clicking crystals.
  var playerPicks = 0;
// Computer generated target number
  var computerGen = randomNumber();

  

  // Setting up our starting variables.
  var wins = 0;
  var losses = 0;
  var crystals;

  


  // Function to create random values for crystals
   function randomNumCrystals() {
    return {
      purple: {
        points: Math.floor(Math.random() * 12) + 1,
        imageUrl: "assets/images/amethyst.jpeg"
      },
      green: {
        points: Math.floor(Math.random() * 12) + 1,
        imageUrl: "assets/images/emerald.jpeg"
      },
      clear: {
        points: Math.floor(Math.random() * 12) + 1,
        imageUrl: "assets/images/quartz.jpeg"
      },
      red: {
        points: Math.floor(Math.random() * 12) + 1,
        imageUrl: "assets/images/ruby.jpeg"
      }
    };
  }

 


  // Function for computer guess of 19-120
  function randomNumber() {
    return Math.floor(Math.random() * 102) + 19;
  }

 


  // Game reset function.
  function gameReset() {
    // Make our current total number 0.
    playerPicks = 0;
    // Generate random crystal values.
    crystals = randomNumCrystals();
    // Generate a random target number and render it to the page.
    computerGen = randomNumber();
    $("#computerGen-block").text(computerGen);
  }

 


  // Function to update page.
  function updateDom(winOrLose) {
    $("#win-block").empty();

    // If the user won...
    if (winOrLose === true) {
      // Show victory message, restart the game, and render the new "current guess" number.
      $("#win-block").append($("<p>").text("We have a Winner!"));
      gameReset();
      renderMatchingNumber();
    }
  


    // If the user lost...
    else if (winOrLose === false) {
      // Show defeat message, restart the game, and render the new "current guess" number.
      $("#win-block").append($("<p>").text("Bummer!"));
      gameReset();
      renderMatchingNumber();
    }

 


    // Function to build win/loss block and append to the page
    var wSpan = $("<span>").text(wins);
    var lSpan = $("<span>").text(losses);

    var pWins = $("<p>").text("Wins: ");
    var pLosses = $("<p>").text("Losses: ");

    pWins.append(wSpan);
    pLosses.append(lSpan);

    $("#win-block").append(pWins);
    $("#win-block").append(pLosses);
  }

 

  // Function to add crystals to the page
  function renderCrystals() {
    for (var key in crystals) {
      var crystalDiv = $("<div class='crystals-button' data-name='" + key + "'>");
      var crystalImg = $("<img alt='image' class='crystal-img'>").attr("src", crystals[key].imageUrl);
      crystalDiv.append(crystalImg);
      $("#crystal-block").append(crystalDiv);
    }
  }

 

  // Function to update current from click functions
  function updateMatchingNumber(crystal) {
    // Update our "current guess" number based on which crystal was clicked.
    playerPicks += crystals[crystal.attr("data-name")].points;
  }

 

  // Function to add current guess to the page
  function renderMatchingNumber() {
    var scoreNumDiv = $("<div id='score-number'>").text(playerPicks);
    $("#score-block").html();
    $("#score-block").html(scoreNumDiv);
  }



  // Functions to start the game
  gameReset();
  updateDom();
  renderCrystals();
  renderMatchingNumber();

 

  // Create on-click captures for  the crystals
  $(".crystals-button").on("click", function(event) {
    // Update our "current guess" number and re-render it.
    updateMatchingNumber($(this));
    renderMatchingNumber();

  

     // If tally matches, register true as a win
    if (playerPicks === computerGen) {
      // If a win, tally the win and restart the game.
      wins++;
      $("#win-block").attr("style", "color: #58ef85;")
      gameReset();
      updateDom(true);
    }
    // If guess tally exceeds the target, to register false for a loss
    else if (playerPicks > computerGen) {
      // Tally loss and restart the game.
      losses++;
      $("#win-block").attr("style", "color: #630b06;")
      gameReset();
      updateDom(false);
    }
  });

});